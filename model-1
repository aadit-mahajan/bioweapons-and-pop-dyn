import numpy as np
import matplotlib.pyplot as plt
import random
import math

GEN_POP = 1000
num_c = 4
city_pop = GEN_POP/num_c

INIT_INFECTED = 10
population = city_pop*np.ones((1, num_c))
infected = np.zeros((1, num_c))

ind = np.random.randint(0, num_c)
infected[0,ind] = INIT_INFECTED
imig = 0
emig = 0

interaction_rate = np.random.randint(7, 12) #changeable
infect_prob = 0.3

birth_rate = 0
death_rate = 0

def infect(IMIG, EMIG, infect_prob, city_index):
    inf = infected[city_index]
    inf = inf(1 + interaction_rate*infect_prob)
    infected[city_index] = inf

#while writing main loop, remember to add code for choosing number of infected 
#going to a particular city

GEN_POP = 1000
num_c = 4
city_pop = GEN_POP/num_c

INIT_INFECTED = 10
population = city_pop*np.ones(num_c)
infected_1 = np.zeros(num_c)
infected_2 = 5*np.ones(num_c)

ind = np.random.randint(0, num_c)
infected_1[ind] = INIT_INFECTED

def infect(IMIG, EMIG, infect_prob, city_index):
    inf = infected[city_index]
    inf = inf(1 + interaction_rate*infect_prob)
    infected[city_index] = inf


def migration(pop):
    print(sum(pop))
    print(pop)
    mig_rate = np.zeros((num_c,num_c))
    for i in range(num_c):
        for j in range(num_c):
            if (i!=j):
                mig_rate[i][j] = math.floor((4 + 4*random.random())*pop[i]/100)
                pop[j] += mig_rate[i,j]
        pop[i] -= sum(mig_rate[i])
#     print(mig_rate)
    return pop
    
def inf_mig(pop):
#     print(sum(pop))
    print(pop)
    mig_rate = np.zeros((num_c,num_c))
    for i in range(num_c):
        for j in range(num_c):
            if (i!=j):
                if sum(mig_rate[i]) < pop[i]:
                    diff = pop[i] - sum(mig_rate[i])
                    mig_rate[i][j] = random.randint(0,diff)
                    
    for i in range(num_c):
        pop[i] -= sum(mig_rate[i])
    for i in range(num_c):
        pop[i] += sum(mig_rate[:,i])
    return mig_rate , pop
    

print(migration(population))
for i in range(10):
    inf_mig(infected_1)
print('______________')
for i in range(10):
    inf_mig(infected_2)

def new_day(pop, inf):
    migration(pop)
    inf_mig(inf)
    
